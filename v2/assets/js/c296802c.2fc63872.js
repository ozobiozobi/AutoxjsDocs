"use strict";(self.webpackChunkautox_doc=self.webpackChunkautox_doc||[]).push([[4220],{8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var t=n(6540);const o={},s=t.createContext(o);function a(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:r},e.children)}},8650:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"rhino/advanced/crypto","title":"crypto \u6d88\u606f\u5904\u7406\uff08\u52a0\u5bc6\uff0c\u6458\u8981\uff09","description":"$crypto \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u79f0\u52a0\u5bc6\uff08\u4f8b\u5982 AES\uff09\u3001\u975e\u5bf9\u79f0\u52a0\u5bc6\uff08\u4f8b\u5982 RSA\uff09\u3001\u6d88\u606f\u6458\u8981\uff08\u4f8b\u5982 MD5, SHA\uff09\u7b49\u652f\u6301\u3002","source":"@site/docs/rhino/advanced/crypto.md","sourceDirName":"rhino/advanced","slug":"/rhino/advanced/crypto","permalink":"/docs/rhino/advanced/crypto","draft":false,"unlisted":false,"editUrl":"https://github.com/aiselp/AutoxDoc/tree/main/docs/rhino/advanced/crypto.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"\u534f\u7a0b","permalink":"/docs/rhino/advanced/continuation"},"next":{"title":"Engines \u5f15\u64ce","permalink":"/docs/rhino/advanced/engines"}}');var o=n(4848),s=n(8453);const a={},c="crypto \u6d88\u606f\u5904\u7406\uff08\u52a0\u5bc6\uff0c\u6458\u8981\uff09",i={},d=[];function l(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"crypto-\u6d88\u606f\u5904\u7406\u52a0\u5bc6\u6458\u8981",children:"crypto \u6d88\u606f\u5904\u7406\uff08\u52a0\u5bc6\uff0c\u6458\u8981\uff09"})}),"\n",(0,o.jsx)(r.p,{children:"$crypto \u6a21\u5757\u63d0\u4f9b\u4e86\u5bf9\u79f0\u52a0\u5bc6\uff08\u4f8b\u5982 AES\uff09\u3001\u975e\u5bf9\u79f0\u52a0\u5bc6\uff08\u4f8b\u5982 RSA\uff09\u3001\u6d88\u606f\u6458\u8981\uff08\u4f8b\u5982 MD5, SHA\uff09\u7b49\u652f\u6301\u3002"}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'let message = "\u672a\u52a0\u5bc6\u5b57\u7b26\u4e32";\r\nlog("\u660e\u6587: ", message);\r\n\r\n// \u5bc6\u94a5\uff0c\u7531\u4e8eAES\u7b49\u7b97\u6cd5\u8981\u6c42\u662f16\u4f4d\u7684\u500d\u6570\uff0c\u6211\u4eec\u8fd9\u91cc\u7528\u4e00\u4e2a16\u4f4d\u7684\u5bc6\u94a5\r\nlet key = new $crypto.Key("password12345678");\r\nlog("\u5bc6\u94a5: ", key);\r\n\r\n// AES\u52a0\u5bc6\r\nlet aes = $crypto.encrypt(message, key, "AES/ECB/PKCS5padding");\r\nlog("AES\u52a0\u5bc6\u540e\u4e8c\u8fdb\u5236\u6570\u636e: ", aes);\r\nlog(\r\n  "AES\u89e3\u5bc6: ",\r\n  $crypto.decrypt(aes, key, "AES/ECB/PKCS5padding", { output: "string" })\r\n);\r\n\r\n// RSA\u52a0\u5bc6\r\n\r\n// \u751f\u6210RSA\u5bc6\u94a5\r\nlet keyPair = $crypto.generateKeyPair("RSA");\r\nlog("\u5bc6\u94a5\u5bf9: ", keyPair);\r\n\r\n// \u4f7f\u7528\u79c1\u94a5\u52a0\u5bc6\r\nlet rsa = $crypto.encrypt(message, keyPair.privateKey, "RSA/ECB/PKCS1padding");\r\nlog("RSA\u79c1\u94a5\u52a0\u5bc6\u540e\u4e8c\u8fdb\u5236\u6570\u636e: ", rsa);\r\n\r\n// \u4f7f\u7528\u516c\u94a5\u89e3\u5bc6\r\nlog(\r\n  "RSA\u516c\u94a5\u89e3\u5bc6: ",\r\n  $crypto.decrypt(rsa, keyPair.publicKey, "RSA/ECB/PKCS1padding", {\r\n    output: "string",\r\n  })\r\n);\n'})}),"\n",(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-js",children:'// \u5b57\u7b26\u4e32\u6d88\u606f\u6458\u8981\r\nlet message = "Hello, Autox.js";\r\n// \u8f93\u51fa\u5404\u79cd\u6d88\u606f\u6458\u8981\u7b97\u6cd5\u7ed3\u679c\u7684hex\u503c\r\nlog("\u5b57\u7b26\u4e32: ", message);\r\nlog("MD5: ", $crypto.digest(message, "MD5"));\r\nlog("SHA1: ", $crypto.digest(message, "SHA-1"));\r\nlog("SHA256: ", $crypto.digest(message, "SHA-256"));\r\n\r\n// \u8f93\u51fa\u5404\u79cd\u6d88\u606f\u6458\u8981\u7b97\u6cd5\u7ed3\u679c\u7684base64\u503c\r\nlog("MD5 [base64]: ", $crypto.digest(message, "MD5", { output: "base64" }));\r\nlog("SHA1 [base64]: ", $crypto.digest(message, "SHA-1", { output: "base64" }));\r\nlog(\r\n  "SHA256 [base64]: ",\r\n  $crypto.digest(message, "SHA-256", { output: "base64" })\r\n);\r\n\r\n// \u6587\u4ef6\u6d88\u606f\u6458\u8981\r\nlet file = "/sdcard/\u811a\u672c/_test_for_message_digest.js";\r\n// \u5199\u5165\u6587\u4ef6\u5185\u5bb9\uff0c\u63d0\u4f9b\u4e3a\u540e\u7eed\u8ba1\u7b97MD5\u7b49\r\n$files.write(file, "Test!");\r\nlog("\u6587\u4ef6: ", file);\r\nlog("MD5: ", $crypto.digest(file, "MD5", { input: "file" }));\r\nlog("SHA1: ", $crypto.digest(file, "SHA-1", { input: "file" }));\r\nlog("SHA256: ", $crypto.digest(file, "SHA-256", { input: "file" }));\n'})})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);